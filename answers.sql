#Creat Health Management Database system for Kenya
 #create database
 DROP DATABASE IF EXISTS healthDB;
 CREATE DATABASE healthDB;
 
 #start using the db
 USE healthDb;
 DROP	 TABLE IF EXISTS counties;
 DROP	 TABLE IF EXISTS subcounties;
 DROP	 TABLE IF EXISTS wards;
 DROP	 TABLE IF EXISTS facilityTypes;
 DROP	 TABLE IF EXISTS facilities;
 DROP	 TABLE IF EXISTS Facility_units;
 DROP	 TABLE IF EXISTS people;
 DROP	 TABLE IF EXISTS staff;
 DROP	 TABLE IF EXISTS patients;
 DROP	 TABLE IF EXISTS visits;
 DROP	 TABLE IF EXISTS diagnoses;
 DROP	 TABLE IF EXISTS medications;
 DROP	 TABLE IF EXISTS prescription;
  DROP	 TABLE IF EXISTS prescription_items;
 ########################################################
 #-- ADMINISTRATIVE UNITS
 ########################################################
 #CREATE COUNTIES TABLE
 CREATE TABLE counties (
 COUNTYID INT AUTO_INCREMENT PRIMARY KEY,
 COUNTYNAME VARCHAR(100) NOT NULL UNIQUE,
 COUNTYCODE VARCHAR(5) NOT NULL UNIQUE
 )ENGINE=InnoDB;

#create the  subcounties
CREATE TABLE subcounties(
SUBCOUNTYID INT AUTO_INCREMENT PRIMARY KEY,
COUNTYID INT NOT NULL,
SUBCOUNTYNAME VARCHAR(100) NOT NULL,
UNIQUE(COUNTYID, SUBCOUNTYNAME),
CONSTRAINT FK_subcounties_county
FOREIGN KEY(COUNTYID) REFERENCES counties(COUNTYID)
ON UPDATE CASCADE ON DELETE CASCADE
)ENGINE=InnoDB;

#CREATE WARDS  TABLE
CREATE TABLE wards(
WARDID INT AUTO_INCREMENT PRIMARY KEY,
SUBCOUNTYID INT NOT NULL,
WARDNAME VARCHAR(100) NOT NULL, 
UNIQUE(SUBCOUNTYID, WARDNAME),
CONSTRAINT FK_wards_subcounty
FOREIGN KEY (SUBCOUNTYID) REFERENCES subcounties(SUBCOUNTYID)
ON UPDATE CASCADE ON DELETE CASCADE
)ENGINE=InnoDB;
#########################################################################
#CREATE HEALTH FACILITIES TABLESPACE
#############################################################

 #FACITIY TYPES
 CREATE TABLE facilityTypes(
 FACILITYTYPEID INT AUTO_INCREMENT PRIMARY KEY,
 FACILITYNAME  VARCHAR(100),
 LEVEL ENUM('LEVEL 2', 'LEVEL 3', 'LEVEL 4', 'LEVEL 5', 'LEVEL 6') NOT NULL,
 DESCRIPTION VARCHAR(255)
 )ENGINE=InnoDB;
 
 #create facility at ward level
 CREATE TABLE facilities(
 FACILITYID  INT AUTO_INCREMENT PRIMARY KEY,
 FACILITYNAME VARCHAR(100) NOT NULL,
 FACILITYTYPEID INT NOT NULL,
 WARDID INT NOT NULL,
 OWNERSHIP ENUM('NATIONALGOVERNMENT', 'COUNTY GOVERNMENT', 'FAITH BASED', 'PRIVATE', 'NGO')NOT NULL,
 PHONE VARCHAR(15),
 EMAIL VARCHAR(50),
 KEPH_LEVEL ENUM('2','3','4', '5','6') NOT NULL,#-- Kenya Essential Package for Health
 UNIQUE(FACILITYNAME, WARDID),
 CONSTRAINT fk_FACILITYTYPE
	FOREIGN KEY (FACILITYTYPEID) REFERENCES facilityTypes(FACILITYTYPEID)
    ON UPDATE CASCADE ON DELETE RESTRICT,
	CONSTRAINT fk_facilities_ward
		FOREIGN KEY(WARDID) REFERENCES wards(WARDID)
        ON UPDATE CASCADE ON DELETE CASCADE
  )ENGINE=InnoDB;
  

##Facility Units (departments/wards/clinics)
CREATE	TABLE Facility_units(
UNITID INT AUTO_INCREMENT PRIMARY KEY,
FACILITYID INT NOT NULL,
FACILITYNAME VARCHAR(100),
UNITTYPE ENUM('Outpatient','Maternity','Inpatient','Emergency','Special Clinic','Pharmacy','Laboratory') NOT NULL,
UNIQUE(FACILITYID, FACILITYNAME),
CONSTRAINT fk_units_facility
	FOREIGN KEY (FACILITYID) REFERENCES facilities(FACILITYID)
    ON UPDATE CASCADE ON DELETE CASCADE
);

######################################################################
#PEOPLE (PATIENTS AND STAFF)
######################################################################
CREATE TABLE people(
PERSONID INT AUTO_INCREMENT PRIMARY KEY,
FIRSTNAME VARCHAR(50) NOT NULL,
LASTNAME VARCHAR(50) NOT NULL,
SEX ENUM('Male','Female','Intersex','Other','Unknown') NOT NULL,
DOB DATE,
PHONE VARCHAR(15),
NATIONALID VARCHAR(10) UNIQUE, 
COUNTYID INT, #county of residence,
CONSTRAINT fk_people_county
	FOREIGN KEY(COUNTYID) REFERENCES counties(COUNTYID)
    ON UPDATE CASCADE ON DELETE SET NULL
)ENGINE=InnoDB;

#CREATE STAFF  TABLE-FOR health workers
CREATE TABLE staff(
STAFFID INT  AUTO_INCREMENT PRIMARY KEY,
PERSONID INT NOT NULL UNIQUE,
FACILITYID INT NOT NULL,
CADRE ENUM('Doctor','Nurse','Clinical Officer','Lab Tech','Pharmacist','CHV','Other') NOT NULL,
IS_ACTIVE BOOLEAN NOT NULL DEFAULT TRUE,
HIRE_DATE DATE,
CONSTRAINT fk_staff_person
	FOREIGN KEY(PERSONID) REFERENCES people(PERSONID)
    on UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT fk_staff_facility
	FOREIGN KEY (FACILITYID) REFERENCES facilities(FACILITYID)
    ON UPDATE CASCADE ON DELETE CASCADE
    );
    
#PATIENT TABLE
CREATE TABLE patients(
PATIENTID INT AUTO_INCREMENT  PRIMARY KEY,
PERSONID INT NOT NULL  UNIQUE,
FACILITYID INT ,   #primary facility
SHANUMBER VARCHAR(50) UNICODE,
CONSTRAINT fk_patients_person
	FOREIGN KEY (PERSONID) REFERENCES people(PERSONID)
    ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT fk_patient_facility
	FOREIGN KEY (FACILITYID) REFERENCES facilities(FACILITYID)
    ON UPDATE CASCADE ON DELETE SET NULL
);

###################################################################################################
#CREATE Services nd visits  tables
###################################################################################################
CREATE TABLE visits (
VISITID INT AUTO_INCREMENT PRIMARY KEY,
PATIENTID INT NOT NULL,
FACILITYID INT NOT NULL,
UNITID INT,
PROVIDERID INT, 
VISITTYPE ENUM('Outpatient','Inpatient','Emergency','MCH','HIV/TB','Other') NOT NULL,
START_TIME DATETIME NOT NULL,
END_TIME DATETIME,
REASON VARCHAR(255),
CONSTRAINT fk_visits_patient
	FOREIGN KEY (PATIENTID) REFERENCES patients(PATIENTID)
    ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT 	fk_visits_facility
	FOREIGN KEY (FACILITYID) REFERENCES facilities(FACILITYID)
    ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT fk_visits_unit
	FOREIGN KEY (UNITID) REFERENCES Facility_units(UNITID)
    ON UPDATE CASCADE ON DELETE SET NULL,
CONSTRAINT	 fk_visits_provider
	FOREIGN KEY (PROVIDERID) REFERENCES staff(STAFFID)
    ON UPDATE CASCADE ON DELETE SET NULL
);
#################################################
#TREATMENT DATA
#################################################
#creata diagnoses table
CREATE TABLE  diagnoses(
	DIAGNOSESID INT AUTO_INCREMENT PRIMARY KEY,
    VISITID INT NOT NULL,
    ICD1O_CODE VARCHAR(20) NOT NULL,
    DESCRIPTION VARCHAR(255),
    IS_PRIMARY BOOLEAN DEFAULT FALSE,
    CONSTRAINT fk_diag_visit
		FOREIGN KEY(VISITID) REFERENCES visits(VISITID)
        ON UPDATE CASCADE ON DELETE CASCADE
	);
    
    #CREATE medication table
CREATE TABLE medications(
MEDICATION_ID INT AUTO_INCREMENT PRIMARY KEY,
MEDNAME VARCHAR(255) NOT NULL,
FORM VARCHAR (50),
STRENGTH VARCHAR(50)
);

#CREATE	 prescrption table
CREATE TABLE prescription (
PRESCRIPTIONID INT AUTO_INCREMENT PRIMARY KEY,
VISITID INT NOT NULL,
PROVIDERID INT ,
ISSUED_AT DATETIME,
INSTRUCTIONS VARCHAR(255), 
CONSTRAINT fk_presc_visit
	FOREIGN KEY	(VISITID) REFERENCES visits(VISITID)
    ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT 	fk_presc_provider
	FOREIGN KEY (PROVIDERID) REFERENCES staff(STAFFID)
    ON UPDATE CASCADE ON DELETE SET NULL
);

#CREATE prescription items table
CREATE TABLE prescription_items (
ITEMID INT AUTO_INCREMENT PRIMARY KEY,
PRESCRIPTIONID INT NOT NULL,
MEDICATION_ID  INT NOT NULL,
DOSE VARCHAR(255),
FREQUENCY VARCHAR(50),
DURATION_DAYS INT,
CONSTRAINT fk_presc_items_presc
	FOREIGN KEY (PRESCRIPTIONID) REFERENCES prescription(PRESCRIPTIONID)
    ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT fk_presc_items_med
	FOREIGN KEY (MEDICATION_ID) REFERENCES medications(MEDICATION_ID)
    ON UPDATE CASCADE ON DELETE RESTRICT
);


	




  
 
 
 